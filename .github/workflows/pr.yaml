name: CI pipeline for PR
on:
  pull_request:
    branches:
    - main
    types:
      - opened
      - synchronize
      - reopened
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
      charts: ${{ steps.filter.outputs.charts }}
    steps:
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          charts:
            - 'charts/**'
          src:
            - 'Dockerfile'
            - 'src/**'
            - poetry.lock
            - pyproject.toml

  test:
    runs-on: ubuntu-latest
    needs:
      - changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Poetry
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Test
        shell: bash
        run: |
          poetry install
          poetry run coverage run
          poetry run coverage report
          poetry run coverage xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml
  build:
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checking out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=${{ github.head_ref }}-,suffix=-{{date 'X'}},format=short
            type=sha,enable=true,priority=100,prefix=${{ github.event.pull_request.user.login }}-,suffix=-{{date 'X'}},format=short,enable=${{ github.event_name == 'pull_request'}}
            type=sha,format=long
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max